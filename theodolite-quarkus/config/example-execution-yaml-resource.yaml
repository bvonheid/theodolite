name: example-execution
benchmark: "uc1-kstreams"
load:
  loadType: "NumSensors"
  loadValues: [25000, 50000, 75000, 100000, 125000, 150000]
resources:
  resourceType: "Instances"
  resourceValues: [1, 2, 3, 4, 5]
slos:
  - sloType: "lag trend"
    threshold: 2000
    prometheusUrl: "http://prometheus-operated:9090"
    externalSloUrl: "http://localhost:80/evaluate-slope"
    offset: 0
    warmup: 60 # in seconds
execution:
  strategy: "LinearSearch"
  duration: 300 # in seconds
  repetitions: 1
  loadGenerationDelay: 30 # in seconds, optional field, default is 0 seconds
  restrictions:
    - "LowerBound"
configOverrides:
  - patcher:
      type: "NodeSelectorPatcher"
      resource: "uc1-load-generator-deployment.yaml"
      config:
        - key: "variableName"
          value: "env"
    value: "prod"
  - patcher:
      type: "NodeSelectorPatcher"
      resource: "uc1-kstreams-deployment.yaml"
      config:
        - key: "variableName"
          value: "env"
    value: "prod"
  - patcher:
      type: "ResourceLimitPatcher"
      resource: "uc1-kstreams-deployment.yaml"
      config: 
        - key: "container" 
          value: "uc-application"
        - key: "limitedResource"
          value:  "cpu"
    value: "1000m"
  - patcher:
      type: "ResourceLimitPatcher"
      resource: "uc1-kstreams-deployment.yaml"
      config:
        - key: "container"
          value: "uc-application"
        - key: "limitedResource"
          value: "memory"
    value: "2Gi"
#  - patcher:
#      type: "SchedulerNamePatcher"
#      resource: "uc1-kstreams-deployment.yaml"
#    value: "random-scheduler"
